kind: Namespace
apiVersion: v1
metadata:
  name: echo
  labels:
    name: echo

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: echo-deployment
  namespace: echo
  labels:
    app: echo-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: echo-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: echo-server
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - europe-west6-a
                      - europe-west6-b
                      - europe-west6-c
              # - matchExpressions:
              #     - key: topology.kubernetes.io/zone
              #       operator: In
              #       values:
              #         - us-west1-a
              #         - us-west1-b
      containers:
        - image: ealen/echo-server
          name: echo-container
          resources:
            requests:
              cpu: "250m"
              memory: "512M"
          ports:
            - containerPort: 80
              name: echo-port
          env:
            - name: ENVVARNAME
              value: ENVVARVALUE
          # volumeMounts:
          #   - mountPath: /data
          #     name: data
          # livenessProbe:
          #   httpGet:
          #     path: /_status/healthz
          #     port: 5000
          #   initialDelaySeconds: 90
          #   timeoutSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /_status/healthz
          #     port: 5000
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 10
      # volumes:
      #   - name: data
      #     emptyDir: {}
      restartPolicy: Always
      # imagePullPolicy: Always

---
kind: Service
apiVersion: v1
metadata:
  name: echo-service
  namespace: echo
spec:
  type: LoadBalancer
  ports:
    - port: 80
  selector:
    app: echo-server

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: echo-ingress
  namespace: echo
spec:
  rules:
    - host: foo.bar.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: echo-service
                port:
                  number: 80
